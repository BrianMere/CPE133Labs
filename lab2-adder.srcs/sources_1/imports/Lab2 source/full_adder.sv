`timescale 1ns / 1ps

////////////////////////
// This file was automatically generated by CATE
////////////////////////

module Full_Adder(
	input A,
	input B,
	input  Cin,
	output S,
	output  Cout
	);
    
    // logical approach
//	assign S = ~Cout & (A | B | Cin) | (A & B & Cin);
//	assign Cout = (A & Cin) | (B & Cin) | (A & B);

    logic S_int, C_1int, C_2int;
    
    // structural approach
    half_adder H0(
        .A(A),
        .B(B),
        .C_out(C_1int), 
        .S(S_int));
    
    half_adder H1(
        .A(C_1int),
        .B(Cin),
        .S(S),
        .C_out(C_2int));
        
    or #0 (Cout, C_1int, C_2int);
	
endmodule

